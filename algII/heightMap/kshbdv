#include <iostream>
#include <fstream>
#include <vector>
#include <queue>

using namespace std;

struct HeightMap {
    int m;
    int n;
    vector<vector<int>> heights;

    HeightMap(int m, int n) : m(m), n(n), heights(m, vector<int>(n)) {}

    void readHeightMap(ifstream &input) {
        for (int i = 0; i < m; ++i) {
            for (int j = 0; j < n; ++j) {
                input >> heights[i][j];
            }
        }
    }

    int countWalls() {
        vector<vector<vector<bool>>> visited(m, vector<vector<bool>>(n, vector<bool>(4, false)));
        int walls = 0;

        // Směry: Východ, Západ, Sever, Jih
        vector<int> dx = {0, 0, -1, 1};
        vector<int> dy = {1, -1, 0, 0};

        for (int i = 0; i < m; ++i) {
            for (int j = 0; j < n; ++j) {
                for (int k = 0; k < 4; ++k) {
                    if (!visited[i][j][k]) {
                        int h = heights[i][j];

                        queue<pair<int, int>> q;
                        q.push({i, j});
                        visited[i][j][k] = true;

                        while (!q.empty()) {
                            int x = q.front().first;
                            int y = q.front().second;
                            q.pop();

                            for (int d = 0; d < 4; ++d) {
                                int nx = x + dx[d];
                                int ny = y + dy[d];

                                if (nx >= 0 && nx < m && ny >= 0 && ny < n) {
                                    int nh = heights[nx][ny];

                                    if (!visited[nx][ny][d] && nh <= h) {
                                        visited[nx][ny][d] = true;
                                        q.push({nx, ny});
                                    }
                                } else {
                                    ++walls;
                                }
                            }
                        }
                    }
                }
            }
        }

        return walls;
    }
};

int main() {
    string fileName = "HeightMap2";

    ifstream input(fileName + ".txt");
    if (!input) {
        cout << "Unable to open input file";
        return 1;
    }

    int m, n;
    input >> m >> n;

    HeightMap map(m, n);
    map.readHeightMap(input);
    input.close();

    int walls = map.countWalls();
    cout << "Pocet sten mnohostenu je: " << walls << endl;

    return 0;
}